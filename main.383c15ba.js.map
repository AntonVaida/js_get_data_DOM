{"version":3,"sources":["scripts/main.js"],"names":["population","document","querySelectorAll","total","querySelector","average","populationArr","map","country","Number","innerText","split","join","totalValue","reduce","acumulator","value","averageValue","length","String","reverse","num","index"],"mappings":";AAAA,aAmBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjBA,IAAMA,EAAaC,SAASC,iBAAiB,eACvCC,EAAQF,SAASG,cAAc,qBAC/BC,EAAUJ,SAASG,cAAc,uBACjCE,EAAgB,EAAIN,GAAYO,IAAI,SAAAC,GAAWC,OAAAA,OACnDD,EAAQE,UAAUC,MAAM,KAAKC,KAAK,OAE9BC,EAAaP,EAAcQ,OAAO,SAACC,EAAYC,GACnDD,OAAAA,EAAaC,GACZ,GACGC,EAAeJ,EAAaP,EAAcY,OAEhDf,EAAMO,UAAYS,OAAON,GAAYF,MAAM,IAAIS,UAAUb,IACvD,SAACc,EAAKC,GACJA,OAAAA,EAAQ,GAAM,GAAe,IAAVA,EAAcD,EAAM,IAAMA,IAE/CD,UAAUR,KAAK,IAEjBP,EAAQK,UAAYS,OAAOF,GAAcN,MAAM,IAAIS,UAAUb,IAC3D,SAACc,EAAKC,GACJA,OAAAA,EAAQ,GAAM,GAAe,IAAVA,EAAcD,EAAM,IAAMA,IAE/CD,UAAUR,KAAK","file":"main.383c15ba.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst population = document.querySelectorAll('.population');\nconst total = document.querySelector('.total-population');\nconst average = document.querySelector('.average-population');\nconst populationArr = [...population].map(country => Number(\n  country.innerText.split(',').join('')\n));\nconst totalValue = populationArr.reduce((acumulator, value) => (\n  acumulator + value\n), 0);\nconst averageValue = totalValue / populationArr.length;\n\ntotal.innerText = String(totalValue).split('').reverse().map(\n  (num, index) => (\n    index % 3 === 0 && index !== 0 ? num + ',' : num\n  )\n).reverse().join('');\n\naverage.innerText = String(averageValue).split('').reverse().map(\n  (num, index) => (\n    index % 3 === 0 && index !== 0 ? num + ',' : num\n  )\n).reverse().join('');\n"]}